name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: 'true'
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew buildZip

      - uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: raptor
          zip_file: lambda/build/distributions/lambda.zip

  deploy-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Authenticate package registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://ghcr.io -u ${GITHUB_ACTOR} --password-stdin
      - name: Get tag
        run: echo "BUILD_TAG=$(git describe --tags)" >> $GITHUB_ENV

      - name: Build and tag image
        run: docker build -f server/Dockerfile -t ghcr.io/dellisd/api.derekellis.ca:${BUILD_TAG} -t ghcr.io/dellisd/api.derekellis.ca:dev .
      - name: Push image
        if: success()
        run: docker push --all-tags ghcr.io/dellisd/api.derekellis.ca

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DOCKER_DEPLOY_PATH }}
            docker stack deploy -c docker-compose.yaml api
